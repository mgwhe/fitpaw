    
<div class="col-sm-6"> 
        <img src="../images/dog_activity.jpg" id="activityImage"alt="" class="img-responsive hidden-xs">
</div>
<div class="col-sm-6"> 
    
    <h2 class="h2">Dog Walk Tracker</h2>
    <div class="panel panel-info">
        <div class="panel-heading">
            <div class="panel-title">
                <div class="row">
                    <div class="col-xs-6">
                        <h5><span class="glyphicon glyphicon-play"></span> Track Exercise Activity</h5>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel-body">

            <h4 id="intervalTime">Interval Time: <i>not started</i></h4>
            <h4 id="position">Location: <i>unknown</i></h4>
            <h4 id="timeLapsed">Time Elapsed: 0 minutes</h4>
            <h4 id="currentDistance">Total Distance: 0 m</h4>

        </div> <!--panel body-->
        <div class="panel-footer">
            <div class="row">
                <div class="col-md-12 ">            
                    <button class="btn btn-md btn-primary btn-block" id="idStartButton" onclick="startTracking()">
                        <span class="glyphicon glyphicon-ok" class="color"></span> Capture
                    </button>
              <!--      <button class="btn btn-md btn-primary btn-block" id="idStopButton" onclick="stopTracking()">
                        <span class="glyphicon glyphicon-stop" class="color"></span> Stop
                    </button>
                -->
                <button type="button" class="btn btn-md btn-primary btn-block open-modal" id="idStopButton" ><span class="glyphicon glyphicon-stop" class="color"></span>
                    Stop</button></div>
            </div>
        </div>
    </div> <!--panel-->

</div>


<script type="text/javascript">
  
    var distanceTotal =0;
    var startTime, endTime;
    var duarationInSecs=0;
    var firstFlag = true;
    
    $(function () {
        //switch on stop
        setButtonsStop();
    })

     //display modal
     $(document).on("click", ".open-modal", function () {
        var x = new Date(); 
        
        stopTracking();

        clearInterval(timerRef);

        const millis = Date.now() - startTime
        
        duarationInSecs = Math.floor(millis/1000);

        distanceTotal = calculateTotalDistance();

        let htmlMessage = "<h2>Total duration: "+ duarationInSecs + "total distance: " + distanceTotal + "</h2>";

        $("#modal-body").html(htmlMessage);     
        $('#modal').modal('show');
    });

    //click on close button trigger boostrap event 
    $(document).on('show.bs.modal', function (event) {
        console.log("here");
       
        //change button colour as test..
        console.log("duration in seconds:"+duarationInSecs);        
        console.log("distance total metres: "+distanceTotal);    

        //clear display
        intervalTimeDisplay.innerHTML = "Interval Time:";
        posDisplay.innerHTML = "Location: ";
        timeElapsed.innerHTML = "Duration: ";
        totalDistanceCalculated.innerHTML = "Distance: ";

      
        //add API to upload activity
        var stringEndpoint = "/api/track/add/"+ duarationInSecs+"."+distanceTotal;
        
        console.log("About to call to: "+stringEndpoint);
        
        $.get(stringEndpoint, (results ={}) =>{
            
            let data = results.data;
            if (!data || !data.foodItemTotals){  
                            
            return;
            }            
            
            console.log("Returned from API call");
            
        }); //AJAX call
        
    });

    function coordinate(x, y) {
        this.x = x;
        this.y = y;
    }
    
    var timerRef;
    var locs = new Array();

    var intervalTimeDisplay = document.getElementById("intervalTime");
    var posDisplay = document.getElementById("position");
    var timeElapsed = document.getElementById("timeLapsed");
    var totalDistanceCalculated = document.getElementById("currentDistance");
     

    function setButtonsStart(){
        let stopBtn = document.getElementById("idStopButton");
        stopBtn.disabled = false;

        let startBtn = document.getElementById("idStartButton");
        startBtn.disabled = true;

    }

    function setButtonsStop(){
        let stopBtn = document.getElementById("idStopButton");
        stopBtn.disabled = true;

        let startBtn = document.getElementById("idStartButton");
        startBtn.disabled = false;
    }

    function startTracking(){

        //update text on time so user knows something is happening
        intervalTimeDisplay.innerHTML = "Interval Time: starting..."; 

        setButtonsStart();

        //reset array of locs
        while (locs.length>0) { 
            locs.pop(); 
        }
        
        //dont wait for timer - start instantly
        getLocation();

        timerRef = setInterval(() => {
            getLocation();
        }, 4000); //milliseconds

        distanceTotal=0;
        duarationInSecs=0;

        startTime = Date.now();
    }

    function stopTracking(){

        //switch on start button/ off stop
        setButtonsStop();

        clearInterval(timerRef);

        const millis = Date.now() - startTime
       
        duarationInSecs = Math.floor(millis/1000);

        distanceTotal = calculateTotalDistance();

    
    }    

    function getLocation() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(processPosition);
      } else { 
        alert("Sorry - Geolocation is not supported by this browser");
      }
    }
    
    function formatCurrentDuration(currentDuration){

        var hours = Math.floor((currentDuration % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        var minutes = Math.floor((currentDuration % (1000 * 60 * 60)) / (1000 * 60));
       
        return ("Duration: "+hours + "h " + minutes + "m ");
    }

    function processPosition(position) {
        var tmpTotalDistance = calculateTotalDistance();
        
        posDisplay.innerHTML = "Location: " + position.coords.latitude.toFixed(3) + ", " +
                position.coords.longitude.toFixed(3);

        let currentDateTime = new Date();
        intervalTimeDisplay.innerHTML = "Interval Time: "+ currentDateTime.toLocaleTimeString(); //Get the time only
        
        console.log("Latitude: " + position.coords.latitude + "Longitude: " + position.coords.longitude);

        if(firstFlag===true)
        {
            //change image to map
            document.getElementById("activityImage").src = "https://maps.googleapis.com/maps/api/staticmap?center="+position.coords.latitude+","+position.coords.longitude+"&zoom=18&size=600x400&maptype=roadmap&markers=color:green%7Clabel:G%7C"+position.coords.latitude+","+position.coords.longitude+
            "&key=AIzaSyADSnKLykFmVSsKnMu37claLaAfogoBOOw";

            firstFlag=false;
        }
        const millis = Date.now() - startTime;
        
   //     intervalTimeDisplay
        timeElapsed.innerHTML = formatCurrentDuration(millis);
        totalDistanceCalculated.innerHTML = "Distance: " +calculateTotalDistance().toFixed(0) +" m";

        locs.push(new coordinate(position.coords.latitude,position.coords.longitude));
        console.log("Dumping.."+JSON.stringify(locs));
          
    } //processPosition

    function calculateTotalDistance()
    {
        var tmpDistance =0;

        for(i=0;i<locs.length;i++)
        {
            if((i+1)<locs.length)
            {
                tmpDistance += getDistanceFromLatLonInKm(
                    locs[i].x,locs[i].y,
                    locs[i+1].x, locs[i+1].y
                );
               
            }
        }
        return tmpDistance;
    }
    //Algorithm sourced online
    function getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2) {
        var R = 6371; // Radius of the earth in km
        var dLat = deg2rad(lat2-lat1);  // deg2rad below
        var dLon = deg2rad(lon2-lon1); 
        var a = 
            Math.sin(dLat/2) * Math.sin(dLat/2) +
            Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * 
            Math.sin(dLon/2) * Math.sin(dLon/2)
            ; 
        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); 
        var d = R * c * 1000; // Distance in m
        return d;
    }
    
    function deg2rad(deg) {
    return deg * (Math.PI/180)
    }


</script>

 <!----modal starts here--->
 <div id="modal" class="modal fade" role='dialog'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">Ã—</button>
                <h4 class="modal-title"> Activity Tracker</h4>
            </div>
            <div class="modal-body" id= "modal-body">
                <p>Here the description starts here........</p>
                
            </div>
            <div class="modal-footer">
          <!--      <button type="button" class="btn btn-default" data-dismiss="modal">Close</button> -->
                <button type="submit" class="btn btn-default btn-success btn-block" data-dismiss="modal">
                    <span class="glyphicon glyphicon-off"></span> Submit</button>
            </div>
        </div>
      </div>
  </div>
  <!--Modal ends here--->




