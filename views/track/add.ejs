    <script>
        function openMapDialog() {
          $("#mapModal").dialog({
                autoOpen: false, 
                modal: true, 
                title: 'Modal', 
                width: 'auto', 
                height: 'auto', 
                buttons: { "Cancel": function () { $(this).dialog("close"); } },
            }).dialog('open');
            return false;
        }
        </script>
    
<div class="col-sm-6"> 
        <img src="../images/dog_activity.jpg" id="activityImage"alt="">
</div>
<div class="col-sm-6"> 
    <div class="card">
        <div class="card-body">
          <h3 class="card-title">Track Exercise Activity</h3>
          <p class="card-text">
              <ul>
              <li>Click Start at the beginning of your dog exercise</li>
                <li>Stop when finished</li> 
                    <li>Save to upload to your activity history</li>
            </ul>
            </p>
            
            <button id="start-button" class="btn btn-danger" onclick="startTracking()">Capture</button>
            <button id="stop-button" class="btn btn-primary" onclick="stopTracking()">Stop</button>
            <a href="/track/add" id="cancel-link" class="btn btn-primary">Cancel</a> 
            <a class="btn btn-primary" href="/track/save" id="save-link" onclick="return confirm('Are you sure you want to save?')">Save</a>

            <p id="message"></p>
            <h4 id="timeLapsed"></h4>
            <h4 id="currentDistance"></h4>
    
    </div>
    </div>
   

</div>

<script>
    
    var distanceTotal =0;
    var startTime, endTime;
    var duarationInSecs=0;
    var firstFlag = true;
    

    function coordinate(x, y) {
        this.x = x;
        this.y = y;
    }
    
    var timerRef;
    var locs = new Array();

    var x = document.getElementById("message");
    var t = document.getElementById("timeLapsed");
    var d = document.getElementById("currentDistance");
     
    function startTracking(){
              
        //reset array of locs
        while (locs.length>0) { 
            locs.pop(); 
        }
        
        //dont wait for timer - start instantly
        getLocation();

        timerRef = setInterval(() => {
            getLocation();
        }, 4000); //milliseconds

        distanceTotal=0;
        duarationInSecs=0;

        startTime = Date.now();
    }

    function stopTracking(){
        clearInterval(timerRef);

        const millis = Date.now() - startTime
       // alert("Time now:"+Date.now()+" Time at start: "+startTime);

        duarationInSecs = Math.floor(millis/1000);

        distanceTotal = calculateTotalDistance();

        alert("RESULT Total time (secs):" + duarationInSecs +" Total distance: "+distanceTotal);
        
        //add API to upload activity
        var stringEndpoint = "/api/track/"+position.coords.latitude+ ","+ position.coords.longitude;
        
        /*
        $.get(stringEndpoint, (results ={}) =>{                  
            let data = results.data;
            if (!data || !data.location){                
                return;
            }
            else{
                    
            }
        }) //get
        */
    }    

    function getLocation() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(processPosition);
      } else { 
        x.innerHTML = "Geolocation is not supported by this browser.";
      }
    }
    
    function formatCurrentDuration(currentDuration){

        var hours = Math.floor((currentDuration % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        var minutes = Math.floor((currentDuration % (1000 * 60 * 60)) / (1000 * 60));
       
        return ("Duration: "+hours + "h " + minutes + "m ");
    }

    function processPosition(position) {
        var tmpTotalDistance = calculateTotalDistance();
        
        x.innerHTML = "Date: "+ Date() + "<br>Latitude: " + position.coords.latitude +
        "<br>Longitude: " + position.coords.longitude;
        
        if(firstFlag===true)
        {
            //change image to map
            document.getElementById("activityImage").src = "https://maps.googleapis.com/maps/api/staticmap?center="+position.coords.latitude+","+position.coords.longitude+"&zoom=18&size=600x400&maptype=roadmap&markers=color:green%7Clabel:G%7C"+position.coords.latitude+","+position.coords.longitude+
            "&key=AIzaSyADSnKLykFmVSsKnMu37claLaAfogoBOOw";

            firstFlag=false;
        }
        const millis = Date.now() - startTime;
        
        t.innerHTML = formatCurrentDuration(millis);
        d.innerHTML = "Distance: " +calculateTotalDistance();

        locs.push(new coordinate(position.coords.latitude,position.coords.longitude));
          
    } //processPosition

    function calculateTotalDistance()
    {
        var tmpDistance =0;

        for(i=0;i<locs.length;i++)
        {
            if((i+1)<locs.length)
            {
                tmpDistance += getDistanceFromLatLonInKm(
                    locs[i].x,locs[i].y,
                    locs[i+1].x, locs[i+1].y
                );
               
            }
        }
        return tmpDistance;
    }

    function getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2) {
        var R = 6371; // Radius of the earth in km
        var dLat = deg2rad(lat2-lat1);  // deg2rad below
        var dLon = deg2rad(lon2-lon1); 
        var a = 
            Math.sin(dLat/2) * Math.sin(dLat/2) +
            Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * 
            Math.sin(dLon/2) * Math.sin(dLon/2)
            ; 
        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); 
        var d = R * c * 1000; // Distance in m
        return d;
    }
    
    function deg2rad(deg) {
    return deg * (Math.PI/180)
    }

</script>

<%- include ../partials/modal_upload_activity %>




